{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","sortType","setSortType","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","value","NONE","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA3BD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUF,EACZ,EADYA,WAENK,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKN,EAASa,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKZ,EAASe,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAGRR,EAMOS,CACZjB,EAAiB,CAAEG,aAAYE,aAQjC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBb,IAAaN,EAASa,SAAW,GAAK,YACnEQ,QAAS,kBAAMd,EAAY,IAH7B,iCAQA,wBACEa,KAAK,SACLD,UAAS,4BAAuBb,IAAaN,EAASe,OAAS,GAAK,YACpEM,QAAS,kBAAMd,EAAY,IAH7B,4BAQA,wBACEa,KAAK,SACLD,UAAWf,EACP,oBACA,6BACJiB,QAAS,kBAAMhB,GAAc,SAAAiB,GAAK,OAAKA,MALzC,sBAUGlB,GAA2B,IAAbE,IACf,wBACEc,KAAK,SACLD,UACEb,IAAaN,EAASuB,MAASnB,EAE3B,0BADA,iBAGNiB,QAAS,kBAzCjBhB,GAAc,QACdE,EAAY,IAiCN,sBAcJ,6BACE,6BACGC,EAAMgB,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,cC5GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d46e50ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(0);\n  const goods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  function reset() {\n    setIsReversed(false);\n    setSortType(0);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={() => setSortType(1)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={() => setSortType(2)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => setIsReversed(value => !value)}\n        >\n          Reverse\n        </button>\n\n        { (isReversed || sortType !== 0) && (\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.NONE && !isReversed\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(item => (\n            <li key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}