{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","localeCompare","length","reverse","App","useState","setIsReversed","setSortType","className","type","onClick","value","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAK,EACH,OAAOI,EAAEE,cAAcD,GACzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITN,GACFC,EAAaM,UAGRN,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMa,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBU,EAAnB,KACA,EAAgCD,mBAAS,GAAzC,mBAAOV,EAAP,KAAiBY,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACe,IAAbb,EACI,iBACA,0BAENe,QAAS,kBAAMH,EAAY,IAP7B,iCAYA,wBACEE,KAAK,SACLD,UAAwB,IAAbb,EACP,oBACA,6BACJe,QAAS,kBAAMH,EAAY,IAL7B,4BAUA,wBACEE,KAAK,SACLD,UAAWZ,EACP,oBACA,6BACJc,QAAS,kBAAMJ,GAAc,SAAAK,GAAK,OAAKA,MALzC,sBAUGf,GAA2B,IAAbD,IACf,wBACEc,KAAK,SACLD,UACe,IAAbb,GAAmBC,EAEf,0BADA,iBAGNc,QAAS,WACPJ,GAAc,GACdC,EAAY,IAThB,sBAiBJ,6BACE,6BACGd,EACCD,EAAiB,CAAEI,aAAYD,aAC/BiB,KAAI,SAAAC,GAAI,OACR,6BACGA,GADMA,cC/GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2bd3c691.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a.localeCompare(b);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(0);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortType === 1\n              ? 'button is-info'\n              : 'button is-info is-light'\n          }\n          onClick={() => setSortType(1)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === 2\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={() => setSortType(2)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => setIsReversed(value => !value)}\n        >\n          Reverse\n        </button>\n\n        { (isReversed || sortType !== 0) && (\n          <button\n            type=\"button\"\n            className={\n              sortType === 0 && !isReversed\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(0);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer, { isReversed, sortType },\n          ).map(item => (\n            <li key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}